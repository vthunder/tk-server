type CartCoupon {
  id: Int
  code: String
  amount_off: Int
  percent_off: Float
  duration: String
  duration_in_months: Int
  max_redemptions: Int
  name: String
  redeem_by: String
  times_redeemed: Int
  valid: Boolean
  conditions: String
}

type CouponStatus {
  status: String
  type: String
}

# type: user, token
# name: [type: user] user name
# email: [type: user] user email
# status: [type: token] new, used
type QrScanInfo {
  type: String
  name: String
  email: String
  status: String
  agreed_terms: String
}

type TastingInfo {
  station: Int
  generic_name: String
  survey_url: String
  products: [TastingProductInfo]
}

type TastingProductInfo {
  product_code: Int
  product_name: String
}

input CheckinInput {
  name: String
  email: String
  user_type: String
  subscribe_to_list: Boolean
  agreed_terms: [AgreedToTermsInput]
}

input AgreedToTermsInput {
  terms_name: String
  agreed_timestamp: String
}

#
# Queries & Mutations
#

type Query {
  ping: String
  gift_certificate_balance: Int
  get_cart_coupon (code: String!): CartCoupon
  get_latest_qr_scan: QrScanInfo
  get_legal_terms (name: String!, email: String!): [String]
  tasting_info (date: String!, station: Int!): TastingInfo
  mailing_list_check (email: String!, list: String): Boolean
}

type Mutation {
  mailing_list_signup (name: String, email: String!, list: String): String
  create_coupon_token (type: String!, count: Int): [String]
  send_coupon_tokens (type: String!, emails: String!): String
  use_coupon_token (token: String!): CouponStatus
  check_in_qr_scan (qr_data: String!): String
  checkin (data: CheckinInput!): String
}

type Subscription {
    new_qr_scan: QrScanInfo
}
